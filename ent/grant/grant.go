// Code generated by entc, DO NOT EDIT.

package grant

import (
	"time"
)

const (
	// Label holds the string label denoting the grant type in the database.
	Label = "grant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldGrantee holds the string denoting the grantee field in the database.
	FieldGrantee = "grantee"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldExpiresAt holds the string denoting the expires_at field in the database.
	FieldExpiresAt = "expires_at"
	// EdgeGranter holds the string denoting the granter edge name in mutations.
	EdgeGranter = "granter"
	// Table holds the table name of the grant in the database.
	Table = "grants"
	// GranterTable is the table that holds the granter relation/edge.
	GranterTable = "grants"
	// GranterInverseTable is the table name for the Wallet entity.
	// It exists in this package in order to avoid circular dependency with the "wallet" package.
	GranterInverseTable = "wallets"
	// GranterColumn is the table column denoting the granter relation/edge.
	GranterColumn = "wallet_grants"
)

// Columns holds all SQL columns for grant fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldGrantee,
	FieldType,
	FieldExpiresAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "grants"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"wallet_grants",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
