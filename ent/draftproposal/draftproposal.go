// Code generated by entc, DO NOT EDIT.

package draftproposal

import (
	"time"
)

const (
	// Label holds the string label denoting the draftproposal type in the database.
	Label = "draft_proposal"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDraftProposalID holds the string denoting the draft_proposal_id field in the database.
	FieldDraftProposalID = "draft_proposal_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeChain holds the string denoting the chain edge name in mutations.
	EdgeChain = "chain"
	// Table holds the table name of the draftproposal in the database.
	Table = "draft_proposals"
	// ChainTable is the table that holds the chain relation/edge.
	ChainTable = "draft_proposals"
	// ChainInverseTable is the table name for the Chain entity.
	// It exists in this package in order to avoid circular dependency with the "chain" package.
	ChainInverseTable = "chains"
	// ChainColumn is the table column denoting the chain relation/edge.
	ChainColumn = "chain_draft_proposals"
)

// Columns holds all SQL columns for draftproposal fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDraftProposalID,
	FieldTitle,
	FieldURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "draft_proposals"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"chain_draft_proposals",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
