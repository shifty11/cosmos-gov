// Code generated by entc, DO NOT EDIT.

package chain

import (
	"time"
)

const (
	// Label holds the string label denoting the chain type in the database.
	Label = "chain"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldIsEnabled holds the string denoting the is_enabled field in the database.
	FieldIsEnabled = "is_enabled"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeProposals holds the string denoting the proposals edge name in mutations.
	EdgeProposals = "proposals"
	// EdgeRPCEndpoints holds the string denoting the rpc_endpoints edge name in mutations.
	EdgeRPCEndpoints = "rpc_endpoints"
	// Table holds the table name of the chain in the database.
	Table = "chains"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "user_chains"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// ProposalsTable is the table that holds the proposals relation/edge.
	ProposalsTable = "proposals"
	// ProposalsInverseTable is the table name for the Proposal entity.
	// It exists in this package in order to avoid circular dependency with the "proposal" package.
	ProposalsInverseTable = "proposals"
	// ProposalsColumn is the table column denoting the proposals relation/edge.
	ProposalsColumn = "chain_proposals"
	// RPCEndpointsTable is the table that holds the rpc_endpoints relation/edge.
	RPCEndpointsTable = "rpc_endpoints"
	// RPCEndpointsInverseTable is the table name for the RpcEndpoint entity.
	// It exists in this package in order to avoid circular dependency with the "rpcendpoint" package.
	RPCEndpointsInverseTable = "rpc_endpoints"
	// RPCEndpointsColumn is the table column denoting the rpc_endpoints relation/edge.
	RPCEndpointsColumn = "chain_rpc_endpoints"
)

// Columns holds all SQL columns for chain fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldDisplayName,
	FieldIsEnabled,
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"user_id", "chain_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultIsEnabled holds the default value on creation for the "is_enabled" field.
	DefaultIsEnabled bool
)
